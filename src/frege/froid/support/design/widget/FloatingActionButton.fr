{-
    Copyright 2016-2017 Michael Chavinda
    This file is part of froid.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
-}

module froid.support.design.widget.FloatingActionButton where

import froid.content.Context
import froid.view.View
import froid.Types

data FloatingActionButton = mutable native android.support.design.widget.FloatingActionButton where
    native setVisibility :: FloatingActionButton -> Int -> IO ()
    native getWidth :: FloatingActionButton -> IO Int
    native getHeight :: FloatingActionButton -> IO Int
    fromView :: (Int -> IO (View)) -> Int -> IO (FloatingActionButton)
    fromView find res = do
        v <- find res
        (fromView' v >>= either (\cce -> error $ "Cast failed.") return) :: IO FloatingActionButton
    toView :: FloatingActionButton -> IO View
    toView button = (toView' button >>= either (\cce -> error $ "Cast failed.") return) :: IO View
    onClick :: FloatingActionButton -> (View -> IO ()) -> IO ()
    onClick fab handler = do
        v <- fab.toView
        v.onClick handler

instance ViewSub FloatingActionButton where
    native fromView' "(android.support.design.widget.FloatingActionButton)" :: View -> IO (ClassCastException | FloatingActionButton)

instance IsView FloatingActionButton where
    native toView' "(android.view.View)" :: FloatingActionButton -> IO (ClassCastException | View)
