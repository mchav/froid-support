{-
    Copyright 2016-2017 Michael Chavinda
    This file is part of froid.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
-}

module froid.support.v4.app.FragmentStatePagerAdapter where

import froid.support.v4.app.Fragment
import froid.support.v4.app.FragmentManager

data FragmentStatePagerAdapter = mutable native android.support.v4.app.FragmentStatePagerAdapter where
    defaultDelegator = FragmentStatePagerAdapter.Delegator { getItem = Nothing, getCount = Nothing }
    native mkFragmentPagerAdapter "froid.support.v4.app.FragmentStatePagerAdapter.delegate" :: FragmentStatePagerAdapter.Delegator -> FragmentManager -> IO FragmentStatePagerAdapter

data Delegator = Delegator { getItem  :: Maybe (MutableIO FragmentStatePagerAdapter -> Int -> IOMutable Fragment)
                           , getCount :: Maybe (MutableIO FragmentStatePagerAdapter -> IO Int)
                           }

native module where {
    public static android.support.v4.app.FragmentStatePagerAdapter delegate(TDelegator delegator, android.support.v4.app.FragmentManager fm) {
        FregeFragmentStatePagerAdapter fspa = new FregeFragmentStatePagerAdapter(fm, delegator);
        return (android.support.v4.app.FragmentStatePagerAdapter) fspa;
    }

    public static class FregeFragmentStatePagerAdapter extends android.support.v4.app.FragmentStatePagerAdapter {

        TDelegator delegator = null;
        public FregeFragmentStatePagerAdapter(android.support.v4.app.FragmentManager fm, TDelegator delegator) {
            super(fm);
            this.delegator = delegator;
        }

        @Override
        public android.support.v4.app.Fragment getItem(int position) {
            if (TDelegator.getItem(delegator).asJust() != null)
                return (android.support.v4.app.Fragment) PreludeBase.TST.performUnsafe(
                    TDelegator.getItem(delegator).asJust().mem1.call()
                    .apply(Thunk.lazy((android.support.v4.app.FragmentStatePagerAdapter) this)).call()
                    .apply(Thunk.<Integer>lazy(position)).call()).call();
            return null;
        }

        @Override
        public int getCount() {
            if (TDelegator.getCount(delegator).asJust() != null)
                return (int) PreludeBase.TST.performUnsafe(
                    TDelegator.getCount(delegator).asJust().mem1.call()
                    .apply(Thunk.lazy((android.support.v4.app.FragmentStatePagerAdapter) this))
                    .call()).call();
            return 0;
        }
    }
}